!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),o.MB_CLIENT="PLEASE SET THIS TO A MONEYBUTTON CLIENT IDENTIFIER";const o={imb:!1,one:!1,setImb:e=>{roundesk.imb=e||new moneyButton.IMB({clientIdentifier:o.MB_CLIENT,suggestedAmount:{amount:"0",currency:"USD"},minimumAmount:{amount:"0",currency:"USD"},onNewPermissionGranted:e=>localStorage.setItem("permissionCode",e),permission:localStorage.permissionCode})},setOne:e=>{roundesk.one=e}},r=async(e,t)=>{try{return(await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(t)})).json()}catch(t){console.log(0,`\nRoundesk Fletcher:\n${e}`,t)}};t.default=async(e,t)=>{if("object"!=typeof e&&"string"!=typeof e[0])return console.error("First argument should be an Array of Strings"),[];if(t)try{console.log("Attempting signed request");let n,i,a="imb";if("relayx.io"===t.split("@")[1]&&(a="one"),"imb"===a){const e=(await o.imb.swipe({cryptoOperations:[{name:"pki",method:"public-key",key:"identity"}]})).cryptoOperations.find(e=>"pki"===e.name).value;i=JSON.stringify({issued_at:Date.now(),paymail:t,origin:window.location.origin,pubkey:e}),n=(await o.imb.swipe({cryptoOperations:[{name:"signedText",method:"sign",data:i,dataEncoding:"utf8"}]})).cryptoOperations.find(e=>"signedText"===e.name).value}else{const e=(await(o.one||relayone).authBeta(!0)).split(".");i=e[0],n=e[1]}return await r("https://roundesk.co/api/list/profiles",{signedData:"imb"===a?btoa(i):i,signature:n,paymails:e})}catch(e){return console.log(e),[]}else{console.log("Requesting public profiles");try{return await r("https://roundesk.co/api/list/profiles",{paymails:e})}catch(e){return console.log(e),[]}}}}]);